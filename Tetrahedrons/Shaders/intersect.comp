#version 430

layout(std430, binding=1) buffer PentVerts
{
    vec4 pentVerts[];
};

layout(std430, binding=2) buffer PentInds
{
    uint pentInds[];
};

layout(std430, binding=3) buffer HullVerts
{
    vec4 hullVerts[];
};

layout(std430, binding=4) buffer HullInds
{
    uint hullInds[];
};

layout(std430, binding=5) buffer Transform
{
    mat4 rotate;
    vec4 pivot;
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint pentInd0 = gl_GlobalInvocationID.x * 5;
    uint hullVrt0 = gl_GlobalInvocationID.x * 6;
    uint hullInd0 = gl_GlobalInvocationID.x * 24;
    
    int k = 0;
    for(int i = 0; i < 5; i++)
    for(int j = i + 1; j < 5; j++)
    {
        vec4 a = (pentVerts[pentInds[pentInd0 + i]] - pivot) * rotate; 
        vec4 b = (pentVerts[pentInds[pentInd0 + j]] - pivot) * rotate;
        
        if (a.w * b.w < 0) // different sides
        {
            float alph = a.w / (a.w - b.w);
            vec4 p = a + alph * (b - a);
            hullVerts[hullVrt0 + k++] = p + pivot;
        }
    }
    
    for (int i = 0; i < 24; i++)
        hullInds[hullInd0 + i] = 0;
        
    int v = 0;
    
    if (k == 4)
    {
        for(int i = 0; i < 4; i++)
        for(int j = i + 1; j < 4; j++)
        for(int k = j + 1; k < 4; k++)
        {
            hullInds[hullInd0 + v++] = hullVrt0 + i;
            hullInds[hullInd0 + v++] = hullVrt0 + j;
            hullInds[hullInd0 + v++] = hullVrt0 + k; 
        }
    }
    else if (k == 6)
    {
        for (int i = 0; i < 6; i++)
            hullInds[hullInd0 + v++] = hullVrt0 + i;
            
        for (int i = 0; i < 3; i++)
        {
            int a = i;
            int b = (1 + i) % 3;
            int c = 3 + i;
            int d = 3 + (1 + i) % 3;
            
            hullInds[hullInd0 + v++] = hullVrt0 + c;
            hullInds[hullInd0 + v++] = hullVrt0 + a;
            hullInds[hullInd0 + v++] = hullVrt0 + b;
            hullInds[hullInd0 + v++] = hullVrt0 + b;
            hullInds[hullInd0 + v++] = hullVrt0 + d;
            hullInds[hullInd0 + v++] = hullVrt0 + c;
            
        }
    }
}
