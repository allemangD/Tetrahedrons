#version 430

layout(std430, binding=0) buffer TetraVerts
{
    vec4 tetraVerts[];
};

layout(std430, binding=1) buffer TetraInds
{
    uint tetraInds[];
};

layout(std430, binding=2) buffer PolyVerts
{
    vec4 polyVerts[];
};

layout(std430, binding=3) buffer PolyEdges
{
    uint polyEdges[];
};

uniform PlaneMats
{
    mat4 tform;
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

void main () {
    uint ti0 = gl_GlobalInvocationID.x * 4;
    uint pv0 = gl_GlobalInvocationID.x * 4;
    uint pe0 = gl_GlobalInvocationID.x * 8;
    
    uint ii = 0;
    uint vv = 0;
    
//    polyVerts[pv0 + vv++] = vec4(-1,0,0,1);
//    polyVerts[pv0 + vv++] = vec4(1,0,0,1);
//
//    polyEdges[pe0 + ii++] = pv0 + 0;
//    polyEdges[pe0 + ii++] = pv0 + 1;
    
    for(uint i = 1; i < 4; i++)
    {
        polyVerts[pv0 + vv++] = (tetraVerts[ti0] + tetraVerts[ti0 + i]) / 2;
    }

    polyEdges[pe0 + ii++] = pv0 + 0;
    polyEdges[pe0 + ii++] = pv0 + 1;
    polyEdges[pe0 + ii++] = pv0 + 1;
    polyEdges[pe0 + ii++] = pv0 + 2;
    polyEdges[pe0 + ii++] = pv0 + 2;
    polyEdges[pe0 + ii++] = pv0 + 0;
}